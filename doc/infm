Для работы установщика необходимо соблюсти ряд условий:
Установка форков PostgreSQL данное приложение не поддерживает.

1) Настроить файл /etc/hosts

Пример:
192.168.0.2 node1 pg1	#          Кластер pcs+corosync+pacemacer может  
192.168.0.3 node2 pg2	#  некоректно себя вести при использовании спецсимволов
			#  в имени кластера, по этой причине лучше пользоваться
			#  неким обозначением, например "pg1"

2) Открыть безпарольный доступ между серверами по ssh

Пример:

pg1#:			#  Обязательно, после выполнения проверьте, что доступ
			#  без пароля осуществляется
ssh-keygen
ssh-copy-id pg2

pg2#:

ssh-keygen
ssh-copy-id pg1

3) Отключить или настроить iptables и firewalld
Документацию по настройке можете взять в интернете. Настроить требуется порты TCP:5432 UDP:5404,5405
Пример:

$IPT -A INPUT -p tcp --dport 5432 -s 192.168.1.0/24 -j ACCEPT
$IPT -A INPUT -p udp --dport 5404 -s 192.168.1.0/24 -j ACCEPT
$IPT -A INPUT -p udp --dport 5405 -s 192.168.1.0/24 -j ACCEPT

либо:

systemctl stop iptables
systemctl disable iptables

systemctl stop iptables
systemctl disable iptables

4) Воссоздать базовую архитектуру хранения как указано ниже:

/				-корневая директория				# Лучше всего СУБД хранить на отдельном 
/pgdata				-директория хранения СУБД			# подмонтированном диске, где точка монтирования
/pgdata/backups			-директория бекапов				# директория /pgdata. Бекапы так же лучше вынести
/pgdata/backups/archive		-директория хранения старых бекапов (Архив)	# на отдельный диск, где точка монтирования 
	       /archive_xlog	-Директория хранения транзакционных логов.	# /pgdata/backups.
										# Рекомендую, но это не критично сделать отдельную
Команды:									# точку монтированя под хранение транзакционного
										# лога.
mkdir -p /pgdata/backups/archive 
mkdir -p /pgdata/backups archive_xlog

5) Настроить локальный репозиторий операционной системы. Либо при установке указать ссылку на нужный репозиторий.
Пакеты, к которым необходимо настроить репозиторий:
bc
pcs
pacemaker
corosync
fence
postgres

Что не следует делать:
1) Выполнять установку на рабочем сервере где работает что то еще.
- Это может привести к утере уже настроенных приложений, файлам и тд. PostgreSQL может существенно замедлить работу посторонним приложениям.

2) Цепляться приложением к СУБД через системного пользователя postgres
- Приложение должно работать под специально настроеной учетной записью, так как ограничения по действиям в самой СУБД пользователю postgres не настроить, а пароль для подключения к СУБД часто зашивается в видимый конфиг.

3) Выполнять репликацию под тем же пользователем, что и Postgres.
- Для этих целей лучше создать отдельного пользователя, собственно говоря скрипт так и делает, создавая пользователя replica.

4) Проводить любые работы с СУБД не имея свежего бекапа.
- Любое неверное действие может привести к повреждению или утере данных, например, случайно набраная команда rm -rf / pgdata/data (у меня конечно такой, ситуации не было, но я очень этого боюсь), по этой причине бекап лучше хранить на отдельном сервере.

5) Копировать или создавать бекап командой cp, на ходу...
- Для этого есть утилита pg_basebackup... ну вы поняли)


